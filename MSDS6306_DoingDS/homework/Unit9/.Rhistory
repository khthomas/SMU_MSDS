Cast[11,2] = "Griphook / Professor Filius Flitwick"
#remove row 93
Cast
Cast2 = Cast
Cast2 = Cast[-c(93),]
View(Cast2)
Cast2 = Cast[-c(90:100),]
Cast2 = Cast[-c(93:93),]
Cast2 = Cast[-c(94),]
Cast2[90:100]
Cast2[90:100,]
Cast2 = Cast[-c(94:94),]
Cast2[90:100,]
Cast = Cast[-c(94:94),]
Cast[90:95]
Cast[90:95,]
Cast = Cast[-c(93:94),]
Cast[90:95,]
link = "http://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
page = read_html(link)
allTables = html_nodes(page, "table")
cast2 = html_table(allTables[3], fill=TRUE)
#experimenting with forward pipe
castlist = page %>%
html_nodes("table") %>%
.[3] %>%
html_table(fill=TRUE)
#Using the forward pipe to make a dataframe
Cast = castlist %>%
data.frame() %>%
.[-1,-c(1,3)] #drop the blank first row and the useless columns
#rename
names(Cast) = c("Actor","Character")
Cast
#Charning Mr. Warwick's character
Cast[11,2] = "Griphook / Professor Filius Flitwick"
#remove row 93
Cast
Cast = Cast[-c(93:94),]
Cast[90:95]
Cast[90:95,]
View(Cast)
link = "http://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
page = read_html(link)
allTables = html_nodes(page, "table")
cast2 = html_table(allTables[3], fill=TRUE)
#experimenting with forward pipe
castlist = page %>%
html_nodes("table") %>%
.[3] %>%
html_table(fill=TRUE)
#Using the forward pipe to make a dataframe
Cast = castlist %>%
data.frame() %>%
.[-1,-c(1,3)] #drop the blank first row and the useless columns
#rename
names(Cast) = c("Actor","Character")
Cast
#Charning Mr. Warwick's character
Cast[11,2] = "Griphook / Professor Filius Flitwick"
#remove row 93
Cast = Cast[-c(92:93),]
Cast[90:100,]
link = "http://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1"
page = read_html(link)
allTables = html_nodes(page, "table")
cast2 = html_table(allTables[3], fill=TRUE)
#experimenting with forward pipe
castlist = page %>%
html_nodes("table") %>%
.[3] %>%
html_table(fill=TRUE)
#Using the forward pipe to make a dataframe
Cast = castlist %>%
data.frame() %>%
.[-1,-c(1,3)] #drop the blank first row and the useless columns
#rename
names(Cast) = c("Actor","Character")
Cast
#Charning Mr. Warwick's character
Cast[11,2] = "Griphook / Professor Filius Flitwick"
#remove row 93
Cast = Cast[-c(92:92),]
Cast[90:100,]
?separate
??separate
library(tidyr)
separate(Cast, Actor, into=c("First Name", "Last Name"), sep=" ")
separate(Cast, Actor, into=c("FirstName", "Surname"), sep=" ")
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep=" ")
View(Cast2)
View(Cast2)
length(Cast[11,1])
length(Cast[11,1][])
length(Cast[11,1][1])
Cast[11,1]
length()Cast[11,1]
length()Cast[11,1])
Cast[11,1][1]
aggregate(nchar(Cast$Actor))
aggregate(nchar(Cast$Actor), fun=nchar())
nchar(Cast[11,1])
strsplit(Cast[11,1])
strsplit(Cast[11,1]," ")
length(strsplit(Cast[11,1]," "))
length(strsplit(Cast[11,1]," ")[1])
length(strsplit(Cast[11,1]," ")[[1])
length(strsplit(Cast[11,1]," ")[[1]]])
length(strsplit(Cast[11,1]," "))
strsplit(Cast[11,1]," ")
strsplit(Cast[11,1]," ")[1]
strsplit(Cast[11,1]," ")[[1]]
length(strsplit(Cast[11,1]," ")[[1]])
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ]?")
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ]?")
View(Cast2)
View(Cast2)
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ]")
View(Cast2)
View(Cast2)
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ](?=[^ ]$")
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ](?=[^ ]$)")
Cast2 = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ](?=[^ ]+$)")
Cast = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ](?=[^ ]+$)")
head(Cast,10)
getwd
getwd()
setwd("C:\Users\kthomas\Documents\SMU\MSDS6306 - Doing Data Science\Unit 9")
setwd("~/SMU/MSDS6306 - Doing Data Science/Unit 9")
write.csv(Cast)
?write_csv
?write.csv
head(Cast,10)
library(kableExtra)
?kableExtra
install.packages("kable")
?kable_styling
library(knitr)
kable(Cast)
?kanle
?kable
kable(Cast, format = "html")
kable(head(Cast), format = html)
kable(head(Cast), format = "html")
kable(head(Cast,10), format = "hmtl", padding = 2, longtable = TRUE)
kable(head(Cast,10), "html", padding = 2, longtable = TRUE)
kable(head(Cast,10), "html", padding = 25, longtable = TRUE,)
kable(head(Cast,10), "html", padding = 2, longtable = TRUE,)
kable(head(Cast,10), "html", padding = 2, longtable = TRUE)
kable(head(Cast,10), "html", padding = 23, longtable = TRUE)
kable(head(Cast,10), "html", padding = 2, longtable = TRUE) %>%
kable_styling(bootstap_options="basic")
kable(head(Cast,10), "html", padding = 2, longtable = TRUE) %>%
kable_styling(bootstap_options="stripped")
kable(head(Cast,10), "html", padding = 2, longtable = TRUE) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
kable(head(Cast,10), "html", padding = 10, longtable = TRUE) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
kable(head(Cast,10), "html", padding = 10, longtable = TRUE) %>%
kable_styling(bootstrap_options = "basic", full_width = F, position = "left")
kable(head(Cast,10), "html", padding = 10, longtable = TRUE) %>%
kable_styling(bootstrap_options = "basic", full_width = F)
kable(head(Cast,10), "html", padding = 10, longtable = TRUE).table
kable(head(Cast,10), "html", padding = 10, longtable = TRUE)
head(Cast,10) %>%
kable("html") %>%
kable_styling()
library("kableExtra", lib.loc="C:/Anaconda3/envs/RandPython/R/library")
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE)
library(xml2)
library(XML)
library(htmltools)
library(dplyr)
library(rvest)
library(selectr)
library(tidyr)
library(kableExtra)
library(knitr)
head(Cast,10) %>%
kable("html") %>%
kable_styling()
kable(head(Cast,10), "html", padding = 10, longtable = TRUE)
kable(head(Cast,10), "html", padding = 10, longtable = TRUE)
head(Cast,10)
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = readhtml(espnLink)
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
allTable = html_nodes(espnhtml, "table")
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
sportsTable
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table", "SHOOTING STATISTICS")
dfshooting = sportsTable %>%
.[2] %>%
html_table()
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE)
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
View(dfshooting)
View(dfshooting)
dfshooting[2,]
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-1,]
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
separate(dfshooting, PLAYER, into=("Name", "Position"), sep=", ")
separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
sapply(dfshooting, class)
dfshooting[,-1]
apply(dfshooting[-1], as.numeric)
apply(dfshooting[-1], x, as.numeric(x))
apply(dfshooting[-1], x, as.numeric(x))
dfshooting[,-1]
apply(dfshooting[,-1], as.numeric)
?apply
apply(dfshooting, c(,-1), as.numeric)
apply(dfshooting, c(,-1), fun=as.numeric())
transform.data.frame(dfshooting[,-1], as.numeric())
test = transform.data.frame(dfshooting[,-1], as.numeric())
sapply(test, class)
test = as.numeric(dfshooting[,-1])
test = lapply(dfshooting[,-1], as.numeric)
test2 = sapply(dfshooting[,-1], as.numeric)
View(dfshooting)
View(test2)
View(test2)
dfshooting = sapply(dfshooting[,-1], as.numeric)
View(dfshooting)
#Get the data and figure out which node is needed
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
#seperate names from position
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
#what are the data types of each column?
sapply(dfshooting, class)
#change into float
apply(dfshooting, c(,-1),)
test = lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE))
test = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
View(test)
View(test)
test2 = test = sapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE))
View(test2)
test = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
test2 = test = sapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE))
test = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
test2 = sapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE))
sapply(dfshooting, class)
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
sapply(dfshooting, class)
View(dfshooting)
View(dfshooting)
#Get the data and figure out which node is needed
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
n = dfshooting[2,]
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
#seperate names from position
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
#what are the data types of each column?
sapply(dfshooting, class)
#change into float
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
sapply(dfshooting, class)
names(dfshooting) = n
View(dfshooting)
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
n = dfshooting[2,]
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
names(dfshooting)
#Get the data and figure out which node is needed
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
#seperate names from position
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
n = names(dfshooting)
#what are the data types of each column?
sapply(dfshooting, class)
#change into float
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
sapply(dfshooting, class)
names(dfshooting) = n
View(dfshooting)
library(ggplot2)
ggplot(data=dfshooting, aes(x=Name, y=FG%, group=Name)) + geom_bar()
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Name)) + geom_bar()
ggplot(data=dfshooting, aes(x=Name, y=FG.)) + geom_bar()
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Name)) + geom_col()
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Name)) + geom_col() + coord_flip()
dfshooting[length(dfshooting),]
dfshooting[length(dfshooting)]
dfshooting[length(dfshooting),1]
dfshooting[,14]
dfshooting[14,]
dfshooting[14,1]
dfshooting[14,1] = "Average"
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Name)) + geom_col() + coord_flip()
#Get the data and figure out which node is needed
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
#seperate names from position
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
n = names(dfshooting)
#what are the data types of each column?
sapply(dfshooting, class)
#change into float
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
sapply(dfshooting, class)
names(dfshooting) = n #rename again due to revious funciton stripping out names
#graph field goals percentage per game
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Name)) + geom_col() + coord_flip()
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) + geom_col() + coord_flip()
#Get the data and figure out which node is needed
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
#seperate names from position
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
n = names(dfshooting)
#what are the data types of each column?
sapply(dfshooting, class)
#change into float
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
sapply(dfshooting, class)
names(dfshooting) = n #rename again due to revious funciton stripping out names
#graph field goals percentage per game
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) + geom_col() + coord_flip()
#Get the data and figure out which node is needed
espnLink = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs"
espnhtml = read_html(espnLink)
sportsTable = html_nodes(espnhtml, "table")
#make the dataframe
dfshooting = sportsTable %>%
.[2] %>%
html_table(fill=TRUE) %>%
data.frame()
#make the columns a meaningful name and drop out rows that are useless
names(dfshooting) = dfshooting[2,]
dfshooting = dfshooting[-c(1,2),]
#seperate names from position
dfshooting = separate(dfshooting, PLAYER, into=c("Name", "Position"), sep=", ")
n = names(dfshooting)
#what are the data types of each column?
sapply(dfshooting, class)
#change into float
dfshooting = data.frame(lapply(dfshooting, function(x) type.convert(as.character(x), as.is=TRUE)))
sapply(dfshooting, class)
#names(dfshooting) = n #rename again due to revious funciton stripping out names
#graph field goals percentage per game
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) + geom_col() + coord_flip()
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) + geom_col(aes(color=Position)) + coord_flip()
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) + geom_col(aes(color=Position, fill=Position)) + coord_flip()
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) +
geom_col(aes(color=Position, fill=Position)) +
coord_flip() +
labs(title="San Antonio Spurs: Field Goals Percentage Per Game",ylab="Player", xlab="Average Field Goal Percentage")
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) +
geom_col(aes(color=Position, fill=Position)) +
coord_flip() +
labs(title="San Antonio Spurs: Field Goals Percentage Per Game", y="Player", x="Average Field Goal Percentage")
ggplot(data=dfshooting, aes(x=Name, y=FG., group=Position)) +
geom_col(aes(color=Position, fill=Position)) +
coord_flip() +
labs(title="San Antonio Spurs: Field Goals Percentage Per Game", x="Player", y="Average Field Goal Percentage")
knitr::opts_chunk$set(echo = TRUE)
library(xml2)
library(XML)
library(htmltools)
library(dplyr)
library(rvest)
library(selectr)
library(tidyr)
library(kableExtra)
library(knitr)
library(ggplot2)
kable(head(Cast,10), "html", padding = 100, longtable = TRUE)
kable(head(Cast,10), "html", padding = 1000, longtable = TRUE)
kable(head(Cast,10), "html", padding = 1000)
kable(head(Cast,10), "html", padding = 1000000)
kable(head(Cast,10), "html", padding = 10000000000000000000000000000000000000)
kable(head(Cast,10), "html", padding = "10)
kable(head(Cast,10), "html", padding = "10")
kable(head(Cast,10), "html")
kable(head(Cast,10), "image")
kable(head(Cast,10), "html")
kable(head(Cast,10), "html", align="c")
kable(head(Cast,10), "html", align="r")
kable(head(Cast,10), "html", align="l")
kable(head(Cast,10), "latex", align="l")
kable(head(Cast,10), "html", align="l")
kable(head(Cast,10), "html", align="l", row.names = FALSE)
kable(head(Cast,10), "html", align="c", row.names = FALSE)
kable(head(Cast,10), "html", align="l", row.names = FALSE)
kable(head(Cast,10), "html", align="l", row.names = FALSE, padding=10)
kable(head(Cast,10), "html", align="l", row.names = FALSE, format.args = (padding=10))
kable(head(Cast,10), "html", align="ccl", row.names = FALSE)
kable(head(Cast,10), "html", align="lcr", row.names = FALSE)
kable(head(Cast,10), "html", align="ccl", row.names = FALSE)
Cast = separate(Cast, Actor, into=c("FirstName       ", "Surname       "), sep="[ ](?=[^ ]+$)")
Cast = separate(Cast, Actor, into=c("FirstName       ", "Surname       "), sep="[ ](?=[^ ]+$)")
Cast = separate(Cast, Actor, into=c("FirstName", "Surname"), sep="[ ](?=[^ ]+$)")
kable(head(Cast,10), "html", align="l", row.names = FALSE, full_width = F)
kable(head(Cast,10), "html", align="l", row.names = FALSE, full_width = T)
kable(head(Cast,10), "html", align="l", row.names = FALSE, full_width = F)
kable(head(Cast,10), "html", align="l", row.names = FALSE, full_width = F) %>% column_spec(3, width="30em")
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>% column_spec(3, width="30em")
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>% column_spec(3, width="2in")
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>% column_spec(3, width="20in")
kable(head(Cast,10), "html", align="l", row.names = FALSE)
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>%
column_spec(1, width="3in") %>%
column_spec(2, width="3in") %>%
column_spec(3, width="3in")
knitr::opts_chunk$set(echo = TRUE)
library(xml2)
library(XML)
library(htmltools)
library(dplyr)
library(rvest)
library(selectr)
library(tidyr)
library(kableExtra)
library(knitr)
library(ggplot2)
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>%
column_spec(1, width="3in") %>%
column_spec(2, width="3in") %>%
column_spec(3, width="3in")
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>%
column_spec(1, width="1in") %>%
column_spec(2, width="1in") %>%
column_spec(3, width="1in")
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>%
column_spec(1, width="2in") %>%
column_spec(2, width="2in") %>%
column_spec(3, width="2in")
kable(head(Cast,10), "html", align="l", row.names = FALSE) %>%
column_spec(1, width="1in") %>%
column_spec(2, width="1in") %>%
column_spec(3, width="3in")
